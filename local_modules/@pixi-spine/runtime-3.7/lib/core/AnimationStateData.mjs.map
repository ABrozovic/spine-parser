{"version":3,"file":"AnimationStateData.mjs","sources":["../../src/core/AnimationStateData.ts"],"sourcesContent":["import type { SkeletonData } from './SkeletonData';\r\nimport type { IAnimationStateData, Map } from '@pixi-spine/base';\r\nimport type { Animation } from './Animation';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class AnimationStateData implements IAnimationStateData<SkeletonData, Animation> {\r\n    skeletonData: SkeletonData;\r\n    animationToMixTime: Map<number> = {};\r\n    defaultMix = 0;\r\n\r\n    constructor(skeletonData: SkeletonData) {\r\n        if (skeletonData == null) throw new Error('skeletonData cannot be null.');\r\n        this.skeletonData = skeletonData;\r\n    }\r\n\r\n    setMix(fromName: string, toName: string, duration: number) {\r\n        const from = this.skeletonData.findAnimation(fromName);\r\n\r\n        if (from == null) throw new Error(`Animation not found: ${fromName}`);\r\n        const to = this.skeletonData.findAnimation(toName);\r\n\r\n        if (to == null) throw new Error(`Animation not found: ${toName}`);\r\n        this.setMixWith(from, to, duration);\r\n    }\r\n\r\n    private static deprecatedWarning1 = false;\r\n\r\n    setMixByName(fromName: string, toName: string, duration: number) {\r\n        if (!AnimationStateData.deprecatedWarning1) {\r\n            AnimationStateData.deprecatedWarning1 = true;\r\n            console.warn('Deprecation Warning: AnimationStateData.setMixByName is deprecated, please use setMix from now on.');\r\n        }\r\n        this.setMix(fromName, toName, duration);\r\n    }\r\n\r\n    setMixWith(from: Animation, to: Animation, duration: number) {\r\n        if (from == null) throw new Error('from cannot be null.');\r\n        if (to == null) throw new Error('to cannot be null.');\r\n        const key = `${from.name}.${to.name}`;\r\n\r\n        this.animationToMixTime[key] = duration;\r\n    }\r\n\r\n    getMix(from: Animation, to: Animation) {\r\n        const key = `${from.name}.${to.name}`;\r\n        const value = this.animationToMixTime[key];\r\n\r\n        return value === undefined ? this.defaultMix : value;\r\n    }\r\n}\r\n"],"names":[],"mappings":"AAOO,MAAM,sBAAN,MAAiF;AAAA,EAKpF,YAAY,YAA4B,EAAA;AAHxC,IAAA,IAAA,CAAA,kBAAA,GAAkC,EAAC,CAAA;AACnC,IAAa,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA;AAGT,IAAA,IAAI,YAAgB,IAAA,IAAA;AAAM,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA,CAAA;AACxE,IAAA,IAAA,CAAK,YAAe,GAAA,YAAA,CAAA;AAAA,GACxB;AAAA,EAEA,MAAA,CAAO,QAAkB,EAAA,MAAA,EAAgB,QAAkB,EAAA;AACvD,IAAA,MAAM,IAAO,GAAA,IAAA,CAAK,YAAa,CAAA,aAAA,CAAc,QAAQ,CAAA,CAAA;AAErD,IAAA,IAAI,IAAQ,IAAA,IAAA;AAAM,MAAM,MAAA,IAAI,KAAM,CAAA,CAAA,qBAAA,EAAwB,QAAU,CAAA,CAAA,CAAA,CAAA;AACpE,IAAA,MAAM,EAAK,GAAA,IAAA,CAAK,YAAa,CAAA,aAAA,CAAc,MAAM,CAAA,CAAA;AAEjD,IAAA,IAAI,EAAM,IAAA,IAAA;AAAM,MAAM,MAAA,IAAI,KAAM,CAAA,CAAA,qBAAA,EAAwB,MAAQ,CAAA,CAAA,CAAA,CAAA;AAChE,IAAK,IAAA,CAAA,UAAA,CAAW,IAAM,EAAA,EAAA,EAAI,QAAQ,CAAA,CAAA;AAAA,GACtC;AAAA,EAIA,YAAA,CAAa,QAAkB,EAAA,MAAA,EAAgB,QAAkB,EAAA;AAC7D,IAAI,IAAA,CAAC,oBAAmB,kBAAoB,EAAA;AACxC,MAAA,mBAAA,CAAmB,kBAAqB,GAAA,IAAA,CAAA;AACxC,MAAA,OAAA,CAAQ,KAAK,oGAAoG,CAAA,CAAA;AAAA,KACrH;AACA,IAAK,IAAA,CAAA,MAAA,CAAO,QAAU,EAAA,MAAA,EAAQ,QAAQ,CAAA,CAAA;AAAA,GAC1C;AAAA,EAEA,UAAA,CAAW,IAAiB,EAAA,EAAA,EAAe,QAAkB,EAAA;AACzD,IAAA,IAAI,IAAQ,IAAA,IAAA;AAAM,MAAM,MAAA,IAAI,MAAM,sBAAsB,CAAA,CAAA;AACxD,IAAA,IAAI,EAAM,IAAA,IAAA;AAAM,MAAM,MAAA,IAAI,MAAM,oBAAoB,CAAA,CAAA;AACpD,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,IAAK,CAAA,IAAA,CAAA,CAAA,EAAQ,EAAG,CAAA,IAAA,CAAA,CAAA,CAAA;AAE/B,IAAK,IAAA,CAAA,kBAAA,CAAmB,GAAG,CAAI,GAAA,QAAA,CAAA;AAAA,GACnC;AAAA,EAEA,MAAA,CAAO,MAAiB,EAAe,EAAA;AACnC,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,IAAK,CAAA,IAAA,CAAA,CAAA,EAAQ,EAAG,CAAA,IAAA,CAAA,CAAA,CAAA;AAC/B,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,kBAAA,CAAmB,GAAG,CAAA,CAAA;AAEzC,IAAO,OAAA,KAAA,KAAU,KAAY,CAAA,GAAA,IAAA,CAAK,UAAa,GAAA,KAAA,CAAA;AAAA,GACnD;AACJ,CAAA,CAAA;AA5CO,IAAM,kBAAN,GAAA,oBAAA;AAAM,kBAAA,CAoBM,kBAAqB,GAAA,KAAA;;;;"}