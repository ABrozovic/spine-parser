{"version":3,"file":"AtlasAttachmentLoader.mjs","sources":["../../src/core/AtlasAttachmentLoader.ts"],"sourcesContent":["import { AttachmentLoader, RegionAttachment, MeshAttachment, BoundingBoxAttachment, PathAttachment, PointAttachment, ClippingAttachment } from './attachments';\r\nimport type { TextureAtlas } from '@pixi-spine/base';\r\nimport type { Skin } from './Skin';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class AtlasAttachmentLoader implements AttachmentLoader {\r\n    atlas: TextureAtlas;\r\n\r\n    constructor(atlas: TextureAtlas) {\r\n        this.atlas = atlas;\r\n    }\r\n\r\n    /** @return May be null to not load an attachment. */\r\n    newRegionAttachment(skin: Skin, name: string, path: string): RegionAttachment {\r\n        const region = this.atlas.findRegion(path);\r\n\r\n        if (region == null) throw new Error(`Region not found in atlas: ${path} (region attachment: ${name})`);\r\n        const attachment = new RegionAttachment(name);\r\n\r\n        attachment.region = region;\r\n\r\n        return attachment;\r\n    }\r\n\r\n    /** @return May be null to not load an attachment. */\r\n    newMeshAttachment(skin: Skin, name: string, path: string): MeshAttachment {\r\n        const region = this.atlas.findRegion(path);\r\n\r\n        if (region == null) throw new Error(`Region not found in atlas: ${path} (mesh attachment: ${name})`);\r\n        const attachment = new MeshAttachment(name);\r\n\r\n        attachment.region = region;\r\n\r\n        return attachment;\r\n    }\r\n\r\n    /** @return May be null to not load an attachment. */\r\n    newBoundingBoxAttachment(skin: Skin, name: string): BoundingBoxAttachment {\r\n        return new BoundingBoxAttachment(name);\r\n    }\r\n\r\n    /** @return May be null to not load an attachment */\r\n    newPathAttachment(skin: Skin, name: string): PathAttachment {\r\n        return new PathAttachment(name);\r\n    }\r\n\r\n    newPointAttachment(skin: Skin, name: string): PointAttachment {\r\n        return new PointAttachment(name);\r\n    }\r\n\r\n    newClippingAttachment(skin: Skin, name: string): ClippingAttachment {\r\n        return new ClippingAttachment(name);\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAOO,MAAM,qBAAkD,CAAA;AAAA,EAG3D,YAAY,KAAqB,EAAA;AAC7B,IAAA,IAAA,CAAK,KAAQ,GAAA,KAAA,CAAA;AAAA,GACjB;AAAA;AAAA,EAGA,mBAAA,CAAoB,IAAY,EAAA,IAAA,EAAc,IAAgC,EAAA;AAC1E,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEzC,IAAA,IAAI,MAAU,IAAA,IAAA;AAAM,MAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,IAAA,CAAA,qBAAA,EAA4B,IAAO,CAAA,CAAA,CAAA,CAAA,CAAA;AACrG,IAAM,MAAA,UAAA,GAAa,IAAI,gBAAA,CAAiB,IAAI,CAAA,CAAA;AAE5C,IAAA,UAAA,CAAW,MAAS,GAAA,MAAA,CAAA;AAEpB,IAAO,OAAA,UAAA,CAAA;AAAA,GACX;AAAA;AAAA,EAGA,iBAAA,CAAkB,IAAY,EAAA,IAAA,EAAc,IAA8B,EAAA;AACtE,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEzC,IAAA,IAAI,MAAU,IAAA,IAAA;AAAM,MAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,IAAA,CAAA,mBAAA,EAA0B,IAAO,CAAA,CAAA,CAAA,CAAA,CAAA;AACnG,IAAM,MAAA,UAAA,GAAa,IAAI,cAAA,CAAe,IAAI,CAAA,CAAA;AAE1C,IAAA,UAAA,CAAW,MAAS,GAAA,MAAA,CAAA;AAEpB,IAAO,OAAA,UAAA,CAAA;AAAA,GACX;AAAA;AAAA,EAGA,wBAAA,CAAyB,MAAY,IAAqC,EAAA;AACtE,IAAO,OAAA,IAAI,sBAAsB,IAAI,CAAA,CAAA;AAAA,GACzC;AAAA;AAAA,EAGA,iBAAA,CAAkB,MAAY,IAA8B,EAAA;AACxD,IAAO,OAAA,IAAI,eAAe,IAAI,CAAA,CAAA;AAAA,GAClC;AAAA,EAEA,kBAAA,CAAmB,MAAY,IAA+B,EAAA;AAC1D,IAAO,OAAA,IAAI,gBAAgB,IAAI,CAAA,CAAA;AAAA,GACnC;AAAA,EAEA,qBAAA,CAAsB,MAAY,IAAkC,EAAA;AAChE,IAAO,OAAA,IAAI,mBAAmB,IAAI,CAAA,CAAA;AAAA,GACtC;AACJ;;;;"}