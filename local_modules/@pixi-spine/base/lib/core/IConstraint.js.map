{"version":3,"file":"IConstraint.js","sources":["../../src/core/IConstraint.ts"],"sourcesContent":["// These enums were moved from PathConstraintData.ts of spine 3.7, 3.8 and 4.0\r\n\r\n/** Controls how the first bone is positioned along the path.\r\n *\r\n * See [Position mode](http://esotericsoftware.com/spine-path-constraints#Position-mode) in the Spine User Guide.\r\n * @public\r\n * */\r\nexport enum PositionMode {\r\n    Fixed,\r\n    Percent,\r\n}\r\n\r\n/** Controls how bones are rotated, translated, and scaled to match the path.\r\n *\r\n * [Rotate mode](http://esotericsoftware.com/spine-path-constraints#Rotate-mod) in the Spine User Guide.\r\n * @public\r\n * */\r\nexport enum RotateMode {\r\n    Tangent,\r\n    Chain,\r\n    ChainScale,\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IConstraintData {\r\n    name: string;\r\n    order: number;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IIkConstraint {\r\n    data: IIkConstraintData;\r\n    /** -1 | 0 | 1 */\r\n    bendDirection: number;\r\n    compress: boolean;\r\n    stretch: boolean;\r\n\r\n    /** A percentage (0-1) */\r\n    mix: number;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IIkConstraintData extends IConstraintData {\r\n    /** -1 | 0 | 1 */\r\n    bendDirection: number;\r\n    compress: boolean;\r\n    stretch: boolean;\r\n    uniform: boolean;\r\n\r\n    /** A percentage (0-1) */\r\n    mix: number;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IPathConstraint {\r\n    data: IPathConstraintData;\r\n    position: number;\r\n    spacing: number;\r\n\r\n    spaces: number[];\r\n    positions: number[];\r\n    world: number[];\r\n    curves: number[];\r\n    lengths: number[];\r\n    segments: number[];\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IPathConstraintData extends IConstraintData {\r\n    positionMode: PositionMode;\r\n    rotateMode: RotateMode;\r\n    offsetRotation: number;\r\n    position: number;\r\n    spacing: number;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface ITransformConstraint {\r\n    data: ITransformConstraintData;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface ITransformConstraintData extends IConstraintData {\r\n    offsetRotation: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    offsetScaleX: number;\r\n    offsetScaleY: number;\r\n    offsetShearY: number;\r\n    relative: boolean;\r\n    local: boolean;\r\n}\r\n"],"names":["PositionMode","RotateMode"],"mappings":";;AAOY,IAAA,YAAA,qBAAAA,aAAL,KAAA;AACH,EAAAA,aAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA,CAAA;AACA,EAAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AAFQ,EAAAA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA,EAAA;AAUA,IAAA,UAAA,qBAAAC,WAAL,KAAA;AACH,EAAAA,WAAA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,EAAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA,CAAA;AACA,EAAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA,CAAA;AAHQ,EAAAA,OAAAA,WAAAA,CAAAA;AAAA,CAAA,EAAA,UAAA,IAAA,EAAA;;;;;"}